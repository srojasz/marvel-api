{"version":3,"sources":["images/marvel-cabecera.jpg","images/no-results.jpg","services/fetchCharacters.js","components/Loader.js","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharactersList.js","components/CharacterDetail.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","filterByComics","characters","min","max","filter","character","comics","available","name","undefined","orderBy","apiUrl","fetchUrl","fetch","then","response","json","responseData","data","results","catch","error","console","Loader","Fragment","className","role","Header","src","logo","alt","Filters","props","onSubmit","ev","preventDefault","htmlFor","type","placeholder","value","search","onChange","target","handleSearch","handleComics","CharacterCard","id","img","route","to","title","CharactersList","length","noresults","sortResults","map","key","thumbnail","path","extension","CharacterDetail","App","state","isLoading","bind","renderCharacterDetail","Number","POSITIVE_INFINITY","this","selectComicsRange","setState","fetchCharacters","err","routeId","parseInt","match","params","selectedCharacter","find","log","exact","render","React","Component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98f180bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marvel-cabecera.77fd783f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no-results.b0826e42.jpg\";","// comics logic\n\nexport function filterByComics(characters, min, max) {\n  const result = characters.filter(character => {\n    return character.comics.available >= min && character.comics.available <= max\n  }\n  );\n  return result\n}\n\n// fetch with params\n\nexport default (name = undefined, min = undefined, max = undefined, orderBy = undefined) => {\n\n  const apiUrl = 'https://gateway.marvel.com:443/v1/public/characters?ts=1&limit=50&apikey=4d46429eee763362f21b987f0e5f594a&hash=b9cc6de99e12cc463c64a0fee68e69bc';\n\n\n  let fetchUrl = name ? `${apiUrl}&nameStartsWith=${name}` : apiUrl;\n\n  if (orderBy) {\n    fetchUrl = `${fetchUrl}&orderBy=${orderBy}`\n  }\n\n\n  return fetch(fetchUrl)\n    .then(response => response.json())\n    .then(responseData => responseData.data.results)\n    .then(results => {\n      if (min !== undefined && max !== undefined) {\n        return filterByComics(results, min, max)\n      } else {\n        return results\n      }\n    })\n\n    .catch(error => {\n      console.error(error);\n    });\n}\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <React.Fragment>\n      <div\n        className=\"spinner-border text-info mb-3\"\n        role=\"status\">\n        <span\n          className=\"sr-only\">\n          Loading...\n      </span>\n      </div>\n      <h3 className=\"text-dark\">\n        Loading...\n    </h3>\n    </React.Fragment>\n\n  )\n}\n\n\nexport default Loader;","import React from 'react';\nimport logo from \"../images/marvel-cabecera.jpg\";\nimport \"../stylesheets/header.scss\"\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h2 className=\"header__title\">\n        Marvel Finder\n      </h2>\n      <img\n        src={logo}\n        alt=\"Imagen de la cabecera con todos los personajes de Marvel\"\n      />\n\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport \"../stylesheets/filters.scss\";\n\nfunction Filters(props) {\n\n  function handleSubmit(ev) {\n    ev.preventDefault();\n  }\n\n  function handleSearch(ev) {\n    const search = ev.target.value;\n    props.handleSearch(search);\n  }\n\n  function handleComics(ev) {\n    const value = ev.target.value;\n    props.handleComics(value);\n  }\n\n  return (\n\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <section className=\"form-search\">\n        <label\n          className=\"form__label\" htmlFor=\"search\">\n          ¿Qué personaje buscas?\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Ej. Hulk\"\n          value={props.search}\n          onChange={handleSearch} />\n      </section>\n\n\n      <section className=\"form__comics\">\n        <h3 className=\"form__comics--title\">\n          ¿Cuántos cómics protagoniza?\n      </h3>\n        <select className=\"form__comics--select\"\n          onChange={handleComics}>\n          <option value=\"\">\n            Todos\n            </option>\n          <option value=\"-10\">\n            Menos de 10 cómics\n              </option>\n          <option value=\"11-20\">\n            Entre 11 y 20 cómics\n              </option>\n          <option value=\"+20\">\n            Más de 20 cómics\n              </option>\n\n        </select>\n\n      </section>\n\n    </form>\n\n  )\n}\n\n\nexport default Filters;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport \"../stylesheets/card.scss\";\n\nfunction CharacterCard(props) {\n\n  const { name, id, img } = props;\n  const route = `/character/${id}`;\n\n  return (\n    <React.Fragment>\n      <img\n        className=\"card__img\"\n        alt={`Imagen de ${name}`}\n        src={img} />\n      <h3>{name}</h3>\n\n\n      <Link to={route}>\n        <button\n          className=\"card__button\"\n          title=\"Pincha aquí para conocer todos los detalles\">\n          Más información\n        </button>\n      </Link>\n\n    </React.Fragment>\n  )\n}\n//PropTypes\nCharacterCard.propTypes = {\n\n  name: PropTypes.string,\n  id: PropTypes.number,\n  img: PropTypes.string,\n\n}\n\nexport default CharacterCard;","import React from 'react';\nimport noresults from \"../images/no-results.jpg\";\nimport \"../stylesheets/list.scss\";\nimport CharacterCard from './CharacterCard';\n\n\nfunction CharactersList(props) {\n\n  function sortResults(ev) {\n    const orderBy = ev.target.value;\n    props.sortResults(orderBy);\n  }\n\n  if (props.characters.length === 0) {\n    return (\n      <section className=\"noresults\">\n        <p className=\"noresults__text\">Lo sentimos, no hemos encontrado lo que buscas. ¡Inténtalo otra vez!</p>\n        <img className=\"noresults__img\" alt=\"Imagen de Supermán llorando\"\n          src={noresults} />\n      </section>\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <section className=\"list\">\n          <div className=\"list__info\">\n            Hay <span className=\"list__number\">{props.characters.length}</span> personajes que coinciden con tus criterios de búsqueda\n          </div>\n          <form>\n            <label className=\"list__results--label\">Ordenar resultados por:</label>\n            <select className=\"list__results--select\"\n              onChange={sortResults}>\n              <option value=\"name\">\n                Nombre</option>\n              <option value=\"modified\">Modificado</option>\n            </select>\n\n          </form>\n\n          <ul className=\"list__list\">\n            {props.characters.map(character =>\n\n              < li className=\"card\"\n\n                key={character.id}>\n\n                <CharacterCard\n\n                  name={character.name}\n                  id={character.id}\n                  img={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n\n                />\n\n\n              </li>\n            )\n            }\n\n          </ul >\n        </section>\n      </React.Fragment>\n    )\n  }\n\n}\n\n\n\nexport default CharactersList;\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport \"../stylesheets/detail.scss\";\n\nfunction CharacterDetail(props) {\n\n  const { name, thumbnail, comics } = props.character;\n\n  return (\n\n    <aside className=\"detail\">\n\n      <Link to=\"/\">\n        <button className=\"detail__button\"\n          title=\"Volver al listado\">\n          Volver atrás\n          </button>\n      </Link>\n\n      <img\n        className=\"detail__img\"\n        alt={`Imagen de ${name}`}\n        src={thumbnail.path + \".\" + thumbnail.extension} />\n\n      <h3>{name}</h3>\n      <p>Cómics: {comics.available}</p>\n\n\n    </aside >\n  )\n}\n\n// PropTypes \n\nCharacterDetail.propTypes = {\n  name: PropTypes.string,\n  thumbnail: PropTypes.string, comics: PropTypes.string\n\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport fetchCharacters from '../services/fetchCharacters';\nimport \"../stylesheets/app.scss\"\nimport Loader from \"./Loader\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharactersList from \"./CharactersList\";\nimport CharacterDetail from \"./CharacterDetail\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      search: \"\",\n      comics: \"\",\n      orderBy: \"\",\n      characters: []\n    }\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleComics = this.handleComics.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.sortResults = this.sortResults.bind(this);\n  }\n\n  // helpers\n\n  selectComicsRange(value) {\n\n    let min;\n    let max;\n    if (value === \"-10\") {\n      min = 0;\n      max = 10;\n    }\n    else if (value === \"11-20\") {\n      min = 11;\n      max = 20;\n    }\n    else if (value === \"+20\") {\n      min = 21;\n      max = Number.POSITIVE_INFINITY;\n    }\n    else {\n      min = undefined;\n      max = undefined;\n    }\n\n    return { min, max }\n  }\n\n  // filter by text\n\n  handleSearch(search) {\n\n    const { min, max } = this.selectComicsRange(this.state.comics);\n\n    this.setState({\n      search,\n      isLoading: false,\n\n    })\n\n    fetchCharacters(search, min, max)\n      .then(characters => {\n        this.setState({\n          isLoading: false,\n          characters\n        })\n      })\n\n      .catch(err => {\n        console.error('my error', err)\n      })\n  }\n\n  // filter by comics\n\n  handleComics(value) {\n    const search = this.state.search;\n\n    const { min, max } = this.selectComicsRange(value);\n\n    this.setState({\n      comics: value\n    })\n\n\n    fetchCharacters(search, min, max)\n      .then(characters => {\n\n        this.setState({\n          isLoading: false,\n          characters\n        })\n      }\n\n      )\n  }\n\n  // sort results\n\n  sortResults(orderBy) {\n\n    const search = this.state.search;\n\n    const { min, max } = this.selectComicsRange(this.state.comics);\n\n    this.setState({\n      orderBy\n\n    })\n\n    fetchCharacters(search, min, max, orderBy)\n      .then(characters => {\n\n        this.setState({\n          isLoading: false,\n          characters\n        })\n      }\n\n      )\n  }\n\n\n  // first fetch (no params)\n\n  componentDidMount() {\n    fetchCharacters().then(characters => {\n      if (characters === undefined) {\n        this.setState({\n          isLoading: true\n        })\n      } else {\n\n        this.setState({\n          isLoading: false,\n          characters\n        })\n      }\n    })\n  }\n\n  // rendering\n\n  renderCharacterDetail(props) {\n\n    const routeId = parseInt(props.match.params.id);\n\n    const selectedCharacter = this.state.characters\n      .find(character => character.id === routeId)\n    if (selectedCharacter === undefined) {\n      return <h4 >\n        Personaje no encontrado\n        </h4>\n    } else {\n\n      return (\n\n        < CharacterDetail character={selectedCharacter} />\n      );\n    }\n  }\n\n  render() {\n    console.log(this.state.characters)\n    const isLoading = this.state.isLoading;\n\n    return isLoading\n      ? (\n        <div className=\"ml-5 mt-5\">\n          <Loader />\n        </div>)\n      : (\n        <div className=\"container\">\n          <Header\n          />\n\n\n          <Switch>\n            <Route exact path='/'>\n              <Filters\n                handleSearch={this.handleSearch}\n                search={this.state.search}\n                handleComics={this.handleComics} />\n              <CharactersList\n                characters={this.state.characters}\n                sortResults={this.sortResults}\n              />\n            </Route>\n            <Route\n              path='/character/:id'\n              render={this.renderCharacterDetail} />\n\n          </Switch>\n        </div >\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}